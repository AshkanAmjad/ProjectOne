@model CMS.Models.ViewModels.User.EditViewModel
@{
    Layout = null;
}
}
<div class="modal-dialog" id="modal">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close text-danger" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">
                <i class="fa fa-lg fa-edit icons"></i>
                <b>
                    Edit User Form
                </b>
            </h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { id = "EditUserForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(i => i.UserId)

                <table class="validation-table-custom">
                    <tr>
                        <td>@Html.LabelFor(u => u.Password) &nbsp; : &nbsp;</td>
                        <td>@Html.TextBoxFor(u => u.Password, new { type = "password", @class = "form-control", @placeholder = "Enter Your New Pass ..." })</td>
                        <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(u => u.Password, null, new { @class = "text-danger" })</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(u => u.ConfirmPassword) &nbsp; : &nbsp;</td>
                        <td>@Html.TextBoxFor(u => u.ConfirmPassword, new { type = "password", @class = "form-control", @placeholder = "Enter Your Confirm Pass ..." })</td>
                        <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(u => u.ConfirmPassword, null, new { @class = "text-danger" })</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(u => u.Email) &nbsp; : &nbsp;</td>
                        <td>@Html.TextBoxFor(u => u.Email, new { @class = "form-control", @placeholder = "Enter Your Email ..." })</td>
                        <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(u => u.Email, null, new { @class = "text-danger" })</td>
                    </tr>
                    <tr>

                        <td>@Html.LabelFor(u => u.IsActive) &nbsp; : &nbsp;</td>
                        <td>@Html.CheckBoxFor(u => u.IsActive, new { @class = "control" })</td>
                        <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(u => u.IsActive, null, new { @class = "text-danger" })</td>
                    </tr>
                </table>
            }
        </div>
        <div class="modal-footer modal-footer-custom">
            <input class="btn btn-success" value="Save" type="button" id="edit" />
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>
<script>
    $(function () {

        

        $("#edit").off("click");
        $("#edit").on("click", function (e) {
            //debugger;
            var $form = $('#EditUserForm');
            $.validator.unobtrusive.parse($form);
            if ($form.valid()) {
                var userId = $("#@Html.IdFor(x=>x.UserId)").val();
                var password = $("#@Html.IdFor(x=>x.Password)").val();
                var confirmPassword = $("#@Html.IdFor(x=>x.ConfirmPassword)").val();
                var email = $("#@Html.IdFor(x=>x.Email)").val();
                var isActive = $('#@Html.IdFor(x=>x.IsActive)')[0].checked

//                 // Check #x
//$( "#x") .prop( "checked", true ;
 
//// Uncheck #x
//                $("#x").prop("checked", false) ;


                var data = {
                    userId: userId,
                    password: password,
                    confirmPassword: confirmPassword,
                    email: email,
                    isActive: isActive
                };

                $("#edit").prop('disabled', true);
                $.post('@Url.Action("Edit","User")', data)
                    .done(function (result) {
                        if (result.success) {
                            gridLoad();
                            $("#operation-box").modal("toggle");
                            alert(result.message);
                        }
                        else {
                            alert(result.message);
                        }
                    }).always(function () {
                        $("#edit").prop('disabled', false);
                    });
            }
        });
    });

</script>
