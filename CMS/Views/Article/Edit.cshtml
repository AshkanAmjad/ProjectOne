@model ViewModels.Models.Article.EditArticleViewModel
@{
    Layout = null;
    var categories = ViewBag.categories != null
                ? ViewBag.categories as List<SelectListItem>
                : new List<SelectListItem>();
}
<div class="modal-dialog" id="modal">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close text-danger" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">
                <i class="fa fa-lg fa-edit icons"></i>
                <b>
                    Edit Article Form
                </b>
            </h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm("Edit", "Article", FormMethod.Post, new { id = "EditArticleForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(s=>s.ArticleId)
            <table class="validation-table-custom">
                <tr>
                    <td>@Html.LabelFor(a => a.Title) &nbsp; : &nbsp;</td>
                    <td>@Html.TextBoxFor(a => a.Title, new { @class = "form-control", @placeholder = "Enter Title Article ..." })</td>
                    <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(a => a.Title, null, new { @class = "text-danger" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(a => a.Content) &nbsp; : &nbsp;</td>
                    <td>@Html.TextAreaFor(a => a.Content, new { @class = "form-control", @placeholder = "Enter Article Content ..." })</td>
                    <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(a => a.Content, null, new { @class = "text-danger" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(a => a.Description) &nbsp; : &nbsp;</td>
                    <td>@Html.TextAreaFor(a => a.Description, new { @class = "form-control", @placeholder = "Enter Article Description ..." })</td>
                    <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(a => a.Description, null, new { @class = "text-danger" })</td>
                </tr>
                <tr>
                    <td>@Html.Label("Category") &nbsp; : &nbsp;</td>
                    <td>
                        @(Html.Kendo().MultiSelectFor(s => s.CategoryIds)
                        .Name("CategoryIds")
                        .Placeholder("Select Category ...")
                        .BindTo(categories))
                    </td>
                    <td class="text-center validation-text-custom"> &nbsp;&nbsp; @Html.ValidationMessageFor(a => a.CategoryIds, null, new { @class = "text-danger" })</td>
                </tr>
            </table>
            }
        </div>
        <div class="modal-footer modal-footer-custom">
            <input class="btn btn-success" value="Add" type="button" id="edit" />
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>
<script>
        $(function () {
        $("#edit").off("click");
        $("#edit").on("click", function (e) {
            var $form = $('#EditArticleForm');
            $.validator.unobtrusive.parse($form);
            if ($form.valid()) {
                var title = $("#@Html.IdFor(x=>x.Title)").val();
                var content = $("#@Html.IdFor(x=>x.Content)").val();
                var description = $("#@Html.IdFor(x=>x.Description)").val();
                var articleId = $("#@Html.IdFor(x=>x.ArticleId)").val();
                var categoryIds = $("#CategoryIds").data("kendoMultiSelect").value();
                if (categoryIds.length==0) {
                    alert("Category is Required");
                    return
                }
                var data = {
                    title: title,
                    content: content,
                    description: description,
                    categoryIds: categoryIds,
                    articleId :articleId
                };


                $("#edit").prop('disabled', true);
                $.post('@Url.Action("Edit","Article")', data)
                    .done(function (result) {
                        if (result.success) {
                            gridLoad();
                            $("#operation-box").modal("toggle");
                            alert(result.message);
                        }
                        else {
                            gridLoad();
                            alert(result.message);
                        }
                    }).always(function () {
                        $("#edit").prop('disabled', false);
                    });
            }
        });
    });
</script>